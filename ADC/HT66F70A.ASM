; Generated by holtek-gcc v3.13, Thu Aug 04 17:43:26 2016
; 
; Configuration:
;       with long instruction
;       Multi-ROM, Multi-RAM
;       bits_per_rom_unit:16
;       with mp1
;       with tbhp, address(0x9)
;          Use tabrd-const
;       
; SFR address of long-instruction arch:
;    mp0 = -1,1,0
;    mp1 = 4,3,2
;    mp2 = 14,13,12
;    tbp = 9,7,8
;    acc = 5
;    pcl = 6
;    status = 10
;    bp = 11
;    intc = 48
;       
;       
; use 'tabrdc' instead of 'tabrd'
;       

#pragma translator "holtek-gcc 4.6.4" "3.13" "build 20130711"
; Rebuild 71

ir equ [2]
mp equ [3]
sbp equ [4]
acc equ [5]
bp equ [11]
tblp equ [7]
tbhp equ [9]
status equ [10]
c equ [10].0
ac equ [10].1
z equ [10].2
ov equ [10].3
cz equ [10].6
sc equ [10].7
intc equ [48]

extern ra:byte
extern rb:byte
extern rc:byte
extern rd:byte
extern re:byte
extern rf:byte
extern rg:byte
extern rh:byte
extern _Crom2Prom:near
extern _Crom2PromNext:near
@HCCINIT	.section 'data'
@HCCINIT0	.section 'data'

#pragma debug scope 1 1
	extern __DELAY3:near
	extern __DELAYX3:near
	extern __DELAYX6:near
	extern __DELAYY5:near
	extern __DELAYY3:near
	extern _builtin_holtek_delay_2:byte
public _Delayms
#pragma debug scope 2 1
#line 11 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c"
_Delayms .section 'code'
_Delayms proc
public _Delayms_2
    local _Delayms_2 db 2 dup(?)	; 2,0
#pragma debug variable 10 2 _Delayms_2+0 "del"
#line 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c"
	clr rb
	clr rc
	jmp _L2
_L3:
#line 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c"
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	IF 2000>263690
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	ERRMESSAGE 'the value 2000of the argument exceeds the maxinum 263690'
	ENDIF
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	IF 2000<0
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	ERRMESSAGE 'the value 2000 of the argument exceeds the mininum 0'
	ENDIF
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	IF 2000==0
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	JMP $
	ENDIF
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	IF (2000>=1) AND (2000<( 4 + __PBP__ * 2))
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	NOP
	ENDIF
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	IF (2000>=2) AND (2000<( 4 + __PBP__ * 2))
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	NOP
	ENDIF
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	IF (2000>=3) AND (2000<( 4 + __PBP__ * 2))
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	NOP
	ENDIF
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	IF (2000>=4) AND (2000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	NOP
	ENDIF
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	IF (2000>=5) AND (2000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	NOP
	ENDIF
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	IF (2000>=6) AND (2000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	NOP
	ENDIF
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	IF (2000>=7) AND (2000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	NOP
	ENDIF
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	IF (2000>=8) AND (2000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	NOP
	ENDIF
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	IF (2000==9)  AND ( __PBP__ > 2 )
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	NOP
	ENDIF
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	IF (2000< ( 8 + __PBP__ * 2)) AND (2000>( 3 + __PBP__ * 2))
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -2000
	ENDIF
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	IF (2000< ( 0404h + __PBP__ * 2)) AND (2000>( 7 + __PBP__ * 2))
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	MOV A,(2000-( 4 + __PBP__ * 2))/4
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	fcall __DELAYX3 + 3 -((2000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	IF (2000< ( 040bh + __PBP__ * 2)) AND (2000> ( 0403h + __PBP__ * 2))
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	MOV A,0 
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -2000
	ENDIF
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	IF (2000 >= ( 040bh + __PBP__ * 2)) AND ((((2000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	MOV A,(2000-( 9 + __PBP__ * 2))/0402h
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	MOV _builtin_holtek_delay_2,A
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	MOV A,0
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	fcall __DELAYY5 +5- (((2000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	IF (2000 >= ( 040bh + __PBP__ * 2)) AND ((((2000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	MOV A,(2000-( 9 + __PBP__ * 2))/0402h
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	MOV _builtin_holtek_delay_2,A
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	MOV A,((2000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c" 1
	fcall __DELAYY3 +3-(((2000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
	inc rb
	sz z
	inc rc
_L2:
	mov a,rb
	sub a,_Delayms_2[0]
	mov a,rc
	sbc a,_Delayms_2[1]
	snz cz
	jmp _L3
	ret
_Delayms endp
#line 13 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c"
#pragma debug scope 1 1
___pcpu equ [25]
___pcc equ [27]
public _GPIO_init
#pragma debug scope 3 1
#line 16 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c"
_GPIO_init .section 'code'
_GPIO_init proc
#line 17 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c"
	set [25].1
#line 18 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c"
	set [27].1
	ret
_GPIO_init endp
#line 18 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c"
#pragma debug scope 1 1
___wdtc equ [62]
___pc equ [26]
public _main
#pragma debug scope 4 1
#line 21 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c"
IFDEF WITH_DEFAULT_STARTUP
extern _main_initial0:near
extern _main_startup:near
ENDIF

ROMBANK 0 @start
@start .section com_l 'code'
_main_startup1:
@start .section com_e 'code'
	mov a,bank _main
	mov bp,a
	jmp _main

_main .section 'code'
_main proc
#line 23 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c"
	mov a,175
	mov [62],a
#line 24 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c"
	fcall _UART_init
#line 25 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c"
	fcall _GPIO_init
_L8:
#line 29 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c"
	snz [26].1
	jmp _L6
#line 33 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c"
	fcall _PC_TX
#line 45 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c"
	jmp _L8
_L6:
	jmp $
_main endp

@dummy proc
	call _main
@dummy endp

#line 45 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c"
#pragma debug scope 1 1
public _output1
@HCCINIT	.section 'data'
#line 8 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c"
@HCCINIT_output1 .section 'data'
_output1 label byte
#pragma debug array 42 7 4 1
#pragma debug variable 42 1 _output1 "output1"
	db 48
@ROMDATA_BASE .section inpage 'code'
	db 48
@HCCINIT_output1 .section 'data'
	db 49
@ROMDATA_BASE .section inpage 'code'
	db 49
@HCCINIT_output1 .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_output1 .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_output1 .section 'data'
#pragma debug struct_begin 43 "__pcpu_bits"
#pragma debug field 21 8 0 1 "__pcpu0" ;0,1
#pragma debug field 21 8 0 1 "__pcpu1" ;1,1
#pragma debug field 21 8 0 1 "__pcpu2" ;2,1
#pragma debug field 21 8 0 1 "__pcpu3" ;3,1
#pragma debug field 21 8 0 1 "__pcpu4" ;4,1
#pragma debug field 21 8 0 1 "__pcpu5" ;5,1
#pragma debug field 21 8 0 1 "__pcpu6" ;6,1
#pragma debug field 21 8 0 1 "__pcpu7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 44 ""
#pragma debug field 2 43 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 44 1 ___pcpu "__pcpu" 1
#pragma debug struct_begin 45 "__pc_bits"
#pragma debug field 21 8 0 1 "__pc0" ;0,1
#pragma debug field 21 8 0 1 "__pc1" ;1,1
#pragma debug field 21 8 0 1 "__pc2" ;2,1
#pragma debug field 21 8 0 1 "__pc3" ;3,1
#pragma debug field 21 8 0 1 "__pc4" ;4,1
#pragma debug field 21 8 0 1 "__pc5" ;5,1
#pragma debug field 21 8 0 1 "__pc6" ;6,1
#pragma debug field 21 8 0 1 "__pc7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 46 ""
#pragma debug field 2 45 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 46 1 ___pc "__pc" 1
#pragma debug struct_begin 47 "__pcc_bits"
#pragma debug field 21 8 0 1 "__pcc0" ;0,1
#pragma debug field 21 8 0 1 "__pcc1" ;1,1
#pragma debug field 21 8 0 1 "__pcc2" ;2,1
#pragma debug field 21 8 0 1 "__pcc3" ;3,1
#pragma debug field 21 8 0 1 "__pcc4" ;4,1
#pragma debug field 21 8 0 1 "__pcc5" ;5,1
#pragma debug field 21 8 0 1 "__pcc6" ;6,1
#pragma debug field 21 8 0 1 "__pcc7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 48 ""
#pragma debug field 2 47 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 48 1 ___pcc "__pcc" 1
#pragma debug struct_begin 49 "__wdtc_bits"
#pragma debug field 21 8 0 1 "__ws0" ;0,1
#pragma debug field 21 8 0 1 "__ws1" ;1,1
#pragma debug field 21 8 0 1 "__ws2" ;2,1
#pragma debug field 21 8 0 1 "__we0" ;3,1
#pragma debug field 21 8 0 1 "__we1" ;4,1
#pragma debug field 21 8 0 1 "__we2" ;5,1
#pragma debug field 21 8 0 1 "__we3" ;6,1
#pragma debug field 21 8 0 1 "__we4" ;7,1
#pragma debug struct_end
#pragma debug union_begin 50 ""
#pragma debug field 2 49 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 50 1 ___wdtc "__wdtc" 1
#line 21 "C:\Users\bet\Desktop\HT66F70A_震動 - 複製\HT66F70A.c"
@code .section at 0 'code'
	clr bp
	jmp _main_startup1

extern _UART_init:near
extern _PC_TX:near

; 
; Generated by holtek-gcc v3.13, Thu Aug 04 17:43:27 2016
; Rebuild 71
; end of file
